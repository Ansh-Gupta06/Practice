//method 2 -> solve like question ->K Sum Paths

//method 1
Node* solve(Node *root, int k, int node,vector<int>& ans)
{
    if(root==NULL)
    return NULL;
    if(root->data == node)
    {
        ans.push_back(root->data);
        return root;
    }
    
    Node* left = solve(root->left,k,node,ans);
    Node* right = solve(root->right,k,node,ans);
    
    if(left==NULL&&right==NULL)
    return NULL;
    if(left!=NULL&&right==NULL)
    {
        ans.push_back(root->data);
        return left;
    }
    if(left==NULL&&right!=NULL)
    {
        ans.push_back(root->data);
        return right;
    }
    
}
int kthAncestor(Node *root, int k, int node)
{
    vector<int> ans;
    root = solve(root,k,node,ans);
    for(auto i: ans)
    {
        if(k==0)
        return i;
        k--;
    }
    return -1;
    
}
